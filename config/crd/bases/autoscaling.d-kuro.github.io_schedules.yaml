
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: schedules.autoscaling.d-kuro.github.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.scaleTargetRef.name
    name: REFERENCE
    type: string
  - JSONPath: .spec.type
    name: TYPE
    type: string
  - JSONPath: .spec.startTime
    name: STARTTIME
    type: string
  - JSONPath: .spec.endTime
    name: ENDTIME
    type: string
  - JSONPath: .spec.startDayOfWeek
    name: STARTDAYOFWEEK
    type: string
  - JSONPath: .spec.endDayOfWeek
    name: ENDDAYOFWEEK
    type: string
  - JSONPath: .spec.minReplicas
    name: MINPODS
    priority: 1
    type: integer
  - JSONPath: .spec.maxReplicas
    name: MAXPODS
    priority: 1
    type: integer
  - JSONPath: .status.condition
    name: STATUS
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: autoscaling.d-kuro.github.io
  names:
    kind: Schedule
    listKind: ScheduleList
    plural: schedules
    singular: schedule
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Schedule is the Schema for the schedules API.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ScheduleSpec defines the desired state of Schedule.
          properties:
            behavior:
              description: Behavior configures the scaling behavior of the target
                in both Up and Down directions.
              properties:
                scaleDown:
                  description: scaleDown is scaling policy for scaling Down. If not
                    set, the default value is to allow to scale down to minReplicas
                    pods, with a 300 second stabilization window (i.e., the highest
                    recommendation for the last 300sec is used).
                  properties:
                    policies:
                      description: policies is a list of potential scaling polices
                        which can be used during scaling. At least one policy must
                        be specified, otherwise the HPAScalingRules will be discarded
                        as invalid
                      items:
                        description: HPAScalingPolicy is a single policy which must
                          hold true for a specified past interval.
                        properties:
                          periodSeconds:
                            description: PeriodSeconds specifies the window of time
                              for which the policy should hold true. PeriodSeconds
                              must be greater than zero and less than or equal to
                              1800 (30 min).
                            format: int32
                            type: integer
                          type:
                            description: Type is used to specify the scaling policy.
                            type: string
                          value:
                            description: Value contains the amount of change which
                              is permitted by the policy. It must be greater than
                              zero
                            format: int32
                            type: integer
                        required:
                        - periodSeconds
                        - type
                        - value
                        type: object
                      type: array
                    selectPolicy:
                      description: selectPolicy is used to specify which policy should
                        be used. If not set, the default value MaxPolicySelect is
                        used.
                      type: string
                    stabilizationWindowSeconds:
                      description: 'StabilizationWindowSeconds is the number of seconds
                        for which past recommendations should be considered while
                        scaling up or scaling down. StabilizationWindowSeconds must
                        be greater than or equal to zero and less than or equal to
                        3600 (one hour). If not set, use the default values: - For
                        scale up: 0 (i.e. no stabilization is done). - For scale down:
                        300 (i.e. the stabilization window is 300 seconds long).'
                      format: int32
                      type: integer
                  type: object
                scaleUp:
                  description: 'scaleUp is scaling policy for scaling Up. If not set,
                    the default value is the higher of:   * increase no more than
                    4 pods per 60 seconds   * double the number of pods per 60 seconds
                    No stabilization is used.'
                  properties:
                    policies:
                      description: policies is a list of potential scaling polices
                        which can be used during scaling. At least one policy must
                        be specified, otherwise the HPAScalingRules will be discarded
                        as invalid
                      items:
                        description: HPAScalingPolicy is a single policy which must
                          hold true for a specified past interval.
                        properties:
                          periodSeconds:
                            description: PeriodSeconds specifies the window of time
                              for which the policy should hold true. PeriodSeconds
                              must be greater than zero and less than or equal to
                              1800 (30 min).
                            format: int32
                            type: integer
                          type:
                            description: Type is used to specify the scaling policy.
                            type: string
                          value:
                            description: Value contains the amount of change which
                              is permitted by the policy. It must be greater than
                              zero
                            format: int32
                            type: integer
                        required:
                        - periodSeconds
                        - type
                        - value
                        type: object
                      type: array
                    selectPolicy:
                      description: selectPolicy is used to specify which policy should
                        be used. If not set, the default value MaxPolicySelect is
                        used.
                      type: string
                    stabilizationWindowSeconds:
                      description: 'StabilizationWindowSeconds is the number of seconds
                        for which past recommendations should be considered while
                        scaling up or scaling down. StabilizationWindowSeconds must
                        be greater than or equal to zero and less than or equal to
                        3600 (one hour). If not set, use the default values: - For
                        scale up: 0 (i.e. no stabilization is done). - For scale down:
                        300 (i.e. the stabilization window is 300 seconds long).'
                      format: int32
                      type: integer
                  type: object
              type: object
            description:
              description: Description is schedule description.
              type: string
            endDayOfWeek:
              description: EndDayOfWeek is scaling end day of week.
              enum:
              - Monday
              - Tuesday
              - Wednesday
              - Thursday
              - Friday
              - Saturday
              - Sunday
              type: string
            endTime:
              description: EndTime is scaling end time. Defined in RFC3339 based format.
                Different formats are evaluated depending on ScheduleType. e.g. OneShot(yyyy-MM-ddTHH:mm),
                Monthly(MM-ddTHH:mm), Weekly(HH:mm), Daily(HH:mm)
              type: string
            maxReplicas:
              description: MaxReplicas is the upper limit for the number of replicas
                to which the autoscaler can scale up.
              format: int32
              minimum: 1
              type: integer
            metrics:
              description: Metrics contains the specifications for which to use to
                calculate the desired replica count.
              items:
                description: MetricSpec specifies how to scale based on a single metric
                  (only `type` and one other matching field should be set at once).
                properties:
                  external:
                    description: external refers to a global metric that is not associated
                      with any Kubernetes object. It allows autoscaling based on information
                      coming from components running outside of cluster (for example
                      length of queue in cloud messaging service, or QPS from loadbalancer
                      running outside of cluster).
                    properties:
                      metric:
                        description: metric identifies the target metric by name and
                          selector
                        properties:
                          name:
                            description: name is the name of the given metric
                            type: string
                          selector:
                            description: selector is the string-encoded form of a
                              standard kubernetes label selector for the given metric
                              When set, it is passed as an additional parameter to
                              the metrics server for more specific metrics scoping.
                              When unset, just the metricName will be used to gather
                              metrics.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                        required:
                        - name
                        type: object
                      target:
                        description: target specifies the target value for the given
                          metric
                        properties:
                          averageUtilization:
                            description: averageUtilization is the target value of
                              the average of the resource metric across all relevant
                              pods, represented as a percentage of the requested value
                              of the resource for the pods. Currently only valid for
                              Resource metric source type
                            format: int32
                            type: integer
                          averageValue:
                            description: averageValue is the target value of the average
                              of the metric across all relevant pods (as a quantity)
                            type: string
                          type:
                            description: type represents whether the metric type is
                              Utilization, Value, or AverageValue
                            type: string
                          value:
                            description: value is the target value of the metric (as
                              a quantity).
                            type: string
                        required:
                        - type
                        type: object
                    required:
                    - metric
                    - target
                    type: object
                  object:
                    description: object refers to a metric describing a single kubernetes
                      object (for example, hits-per-second on an Ingress object).
                    properties:
                      describedObject:
                        description: CrossVersionObjectReference contains enough information
                          to let you identify the referred resource.
                        properties:
                          apiVersion:
                            description: API version of the referent
                            type: string
                          kind:
                            description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"'
                            type: string
                          name:
                            description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                      metric:
                        description: metric identifies the target metric by name and
                          selector
                        properties:
                          name:
                            description: name is the name of the given metric
                            type: string
                          selector:
                            description: selector is the string-encoded form of a
                              standard kubernetes label selector for the given metric
                              When set, it is passed as an additional parameter to
                              the metrics server for more specific metrics scoping.
                              When unset, just the metricName will be used to gather
                              metrics.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                        required:
                        - name
                        type: object
                      target:
                        description: target specifies the target value for the given
                          metric
                        properties:
                          averageUtilization:
                            description: averageUtilization is the target value of
                              the average of the resource metric across all relevant
                              pods, represented as a percentage of the requested value
                              of the resource for the pods. Currently only valid for
                              Resource metric source type
                            format: int32
                            type: integer
                          averageValue:
                            description: averageValue is the target value of the average
                              of the metric across all relevant pods (as a quantity)
                            type: string
                          type:
                            description: type represents whether the metric type is
                              Utilization, Value, or AverageValue
                            type: string
                          value:
                            description: value is the target value of the metric (as
                              a quantity).
                            type: string
                        required:
                        - type
                        type: object
                    required:
                    - describedObject
                    - metric
                    - target
                    type: object
                  pods:
                    description: pods refers to a metric describing each pod in the
                      current scale target (for example, transactions-processed-per-second).  The
                      values will be averaged together before being compared to the
                      target value.
                    properties:
                      metric:
                        description: metric identifies the target metric by name and
                          selector
                        properties:
                          name:
                            description: name is the name of the given metric
                            type: string
                          selector:
                            description: selector is the string-encoded form of a
                              standard kubernetes label selector for the given metric
                              When set, it is passed as an additional parameter to
                              the metrics server for more specific metrics scoping.
                              When unset, just the metricName will be used to gather
                              metrics.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                        required:
                        - name
                        type: object
                      target:
                        description: target specifies the target value for the given
                          metric
                        properties:
                          averageUtilization:
                            description: averageUtilization is the target value of
                              the average of the resource metric across all relevant
                              pods, represented as a percentage of the requested value
                              of the resource for the pods. Currently only valid for
                              Resource metric source type
                            format: int32
                            type: integer
                          averageValue:
                            description: averageValue is the target value of the average
                              of the metric across all relevant pods (as a quantity)
                            type: string
                          type:
                            description: type represents whether the metric type is
                              Utilization, Value, or AverageValue
                            type: string
                          value:
                            description: value is the target value of the metric (as
                              a quantity).
                            type: string
                        required:
                        - type
                        type: object
                    required:
                    - metric
                    - target
                    type: object
                  resource:
                    description: resource refers to a resource metric (such as those
                      specified in requests and limits) known to Kubernetes describing
                      each pod in the current scale target (e.g. CPU or memory). Such
                      metrics are built in to Kubernetes, and have special scaling
                      options on top of those available to normal per-pod metrics
                      using the "pods" source.
                    properties:
                      name:
                        description: name is the name of the resource in question.
                        type: string
                      target:
                        description: target specifies the target value for the given
                          metric
                        properties:
                          averageUtilization:
                            description: averageUtilization is the target value of
                              the average of the resource metric across all relevant
                              pods, represented as a percentage of the requested value
                              of the resource for the pods. Currently only valid for
                              Resource metric source type
                            format: int32
                            type: integer
                          averageValue:
                            description: averageValue is the target value of the average
                              of the metric across all relevant pods (as a quantity)
                            type: string
                          type:
                            description: type represents whether the metric type is
                              Utilization, Value, or AverageValue
                            type: string
                          value:
                            description: value is the target value of the metric (as
                              a quantity).
                            type: string
                        required:
                        - type
                        type: object
                    required:
                    - name
                    - target
                    type: object
                  type:
                    description: type is the type of metric source.  It should be
                      one of "Object", "Pods" or "Resource", each mapping to a matching
                      field in the object.
                    type: string
                required:
                - type
                type: object
              type: array
            minReplicas:
              description: MinReplicas is the lower limit for the number of replicas
                to which the autoscaler can scale down. It defaults to 1 pod.
              format: int32
              minimum: 1
              type: integer
            scaleTargetRef:
              description: scaleTargetRef points to the target resource to scale,
                and is used to the pods for which metrics should be collected, as
                well as to actually change the replica count.
              properties:
                apiVersion:
                  description: API version of the referent
                  type: string
                kind:
                  description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"'
                  type: string
                name:
                  description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                  type: string
              required:
              - kind
              - name
              type: object
            startDayOfWeek:
              description: StartDayOfWeek is scaling start day of week.
              enum:
              - Monday
              - Tuesday
              - Wednesday
              - Thursday
              - Friday
              - Saturday
              - Sunday
              type: string
            startTime:
              description: StartTime is scaling start time. Defined in RFC3339 based
                format. Different formats are evaluated depending on ScheduleType.
                e.g. OneShot(yyyy-MM-ddTHH:mm), Monthly(MM-ddTHH:mm), Weekly(HH:mm),
                Daily(HH:mm)
              type: string
            suspend:
              description: Suspend indicates whether to suspend this schedule.
              type: boolean
            timeZone:
              description: TimeZone is the name of the timezone used in the argument
                of the time.LoadLocation(name string) function. StartTime and EndTime
                are interpreted as the time in the time zone specified by TimeZone.
                If not specified, the time will be interpreted as UTC.
              type: string
            type:
              description: ScheduleType is a type of schedule represented by Weekly,Daily,OneShot.
              enum:
              - Monthly
              - Weekly
              - Daily
              - OneShot
              type: string
          required:
          - endTime
          - scaleTargetRef
          - startTime
          - type
          type: object
        status:
          description: ScheduleStatus defines the observed state of Schedule.
          properties:
            condition:
              description: Condition is schedule status type.
              type: string
            lastTransitionTime:
              description: LastTransitionTime is the last time the condition transitioned
                from one status to another.
              format: date-time
              type: string
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
